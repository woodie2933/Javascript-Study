// 데이터 타입, 실행 컨텍스트, this

// 데이터 타입의 종류
// 1. 기본형 : Number, String, Boolean, null, undefined, Symbol
// 2. 참조형(객체) : Object - Array, Function, Date, RegExp, Map, WeakMap, Set, WeakSet

// 기본형과 참조형을 나누는 방법
// 1. 값의 저장 방식
//    기본형 : 값이 담긴 주소값을 바로 복제
//    참조형 : 값이 담긴 주소로 이루어진 묶음인 주소값 복제
// 2. 불변성 여부
//    기본형 : 불변성을 띔
//    참조형 : 불변성을 띄지 않음
//    -> name: 홍길동, age: 30 인 동일한 요소로 이루어진 객체가 두 개 존재해도 다른 객체로 인식하는 이유

// 메모리, 데이터
// 1. 비트 : 0과 1 (컴퓨터가 이해할 수 있는 가장 작은 단위)
// 2. 바이트 : 비트를 8개 합쳐 놓은 단위
// 3. 모든 데이터는 바이트 단위의 식별자인 메모리 주소값을 통해서 서로 구분된다.
// 즉 바이트는 항상 메모리 주소값을 가지고 있기 때문에 서로 구분이 다 된다!

// 그럼 64비트는 어떻게 저장하나요?
// 64비트를 8비트(바이트)로 나누면 8바이트가 된다. 각 바이트를 메모리에 저장하므로 64비트 정수는 메모리에서 8개의 연속된 자리를 차지하게 된다.

// Java 나 C 언어의 경우, 변수형을 저장할 때에 직접 그 변수의 크기까지 개발자가 지정해줘야 하는 케이스가 있다.
// Js 는 8바이트를 쓰는 반면
// Java 는 4가지로 저장, 그러나 당시에는 컴퓨터의 메모리가 성능이 좋지 않아서 그랬으나 현재는 신경쓰지 않는다.

// 식별자, 변수
// var testValue = 3
//   (식별자)    (변수)
// 변수는 데이터, 식별자는 변수의 이름!
