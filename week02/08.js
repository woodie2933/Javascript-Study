// Map
// JS => 객체와 배열을 사용하여 다양한 프로그래밍 가능!
// 그렇지만 현실 세계를 반영하기에는 좀 어려웠다,
// so, 프로그래밍에서 부족한 점을 보완하기 위해 Map 이나 Set 같은 추가적인 자료구조가 등장

// 자료구조 : 여러 자료의 형태
// Array, Object 등 데이터의 형태가 모두 자료구조이다.
// Map 과 Set 도 해당!
// 목적은 데이터의 구성, 검색, 사용을 효율적으로 처리한다!
// better than 기존의 객체, 배열

// 1. Map
// key - value 페어를 저장합니다. 객체처럼!
// 차이점 = 객체는 키에 문자 형태가 들어왔었다. 하지만 Map은 key에 어떤 것도 들어갈 수 있다! 어떤 데이터타입도 다 들어갈 수 있다!
// 왜냐면 Map 은 키가 정렬된 순서로 저장되기 때문이다.
// DB 에도 데이터가 저장될 때에 순서대로 저장되는 기법들이 있다. 이를 차용한 방법이라고 할 수 있다!
// 제공하는 기능들 : 검색, 삭제, 제거, 여부 확인

const myMap = new Map(); // Map 생성
myMap.set("key", "value"); // Map 구성 방식

myMap.get("key"); // 넣은 값들을 확인할 수 있는 방법
// get 과 set 은 항상 세트~

// Map 은 기본적으로 대량의 데이터를 처리하려고 하는 것이기 때문에, 반복적인 부분이 상당히 중요!! so 반복을 위한 메서드가 몇 가지 있습니다.
// keys(), values(), entries() 가 있다.
// 이를 이용하여 key, value, key-value 를 반복할 수 있다!
// for - of 구문 : 사용을 위해서 컬렉션 객체가 [Symbol.iterator] 속성을 가지고 있어야 한다! (iterator = 반복자)
// for - of 구문 : 하나하나 순회하면서 하나씩 체크해가면서 처리할 수 있게끔 하는 문법
